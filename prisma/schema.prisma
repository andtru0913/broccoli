// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id            String          @id @default(auto()) @map("_id") @db.ObjectId
  username      String
  password      String
  firstname     String?
  lastname      String?
  gender        String
  email         String          @unique
  address       String?
  privatenumber String?
  worknumber    String?
  company       String?
  assignment    String?
  description   String?
  role          String?
  admin         Boolean         @default(false)
  salt          String
  lunchgroup    Lunchgroup?     @relation(fields: [lunchgroupID], references: [id])
  lunchgroupID  String?         @db.ObjectId
  events        UserOnEvent[]
  image         String?
  news2          News[]
  notifications Notifications[]
}

model Event {
  id          String        @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  start       DateTime
  end         DateTime
  description String?
  users       UserOnEvent[]
}

model Lunchgroup {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  title String
  users User[]
}

model Page {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String?
  cards       Card[]
}

model Card {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String?
  page        Page    @relation(fields: [pageID], references: [id])
  pageID      String  @db.ObjectId
}

model Posts {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  slug      String   @unique
  title     String
  body      String
  timestamp DateTime
}

model UserOnEvent {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  user    User     @relation(fields: [userId], references: [id])
  userId  String   @db.ObjectId
  event   Event    @relation(fields: [eventId], references: [id])
  eventId String   @db.ObjectId
  coming  Boolean?

  @@unique([userId, eventId])
}

model News {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  title    String
  file     String
  date     DateTime
  author   User   @relation(fields: [authorId], references: [id])
  authorId String @db.ObjectId
}

model Notifications {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  text      String
  startDate DateTime
  endDate   DateTime
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String   @db.ObjectId
}
